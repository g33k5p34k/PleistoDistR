% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcmetrics.R
\name{pleistodist_euclidean}
\alias{pleistodist_euclidean}
\title{Calculate Euclidean distance between points}
\usage{
pleistodist_euclidean(points, epsg, outdir)
}
\arguments{
\item{points}{A user-generated multi-point shapefile (.shp) containing at least two points. If the shapefile attribute table contains a column
labelled 'Name', the output distance matrix will use the identifiers in this column to label each pairwise comparison. Otherwise, the
output distance matrix will use the attribute FID values instead.}

\item{epsg}{The projected coordinate system in EPSG code format. Because of the curvature of the Earth's surface, we need to apply a map
projection to accurately calculate straight-line distances between points instead of using the default WGS84 geographical coordinate system.
Users should specify a projected coordinate system appropriate to the geographic region being analysed using the projection's
associated EPSG code (https://epsg.org/home). Geographic coordinate system projections are not recommended as those will result
in distance matrices calculated in decimal degrees rather than in distance units.}

\item{outdir}{Output directory for the Euclidean distance matrix (island_euclideandist.csv).
If the specified output directory doesn't already exist, PleistoDist will create the output directory.}
}
\value{
This function outputs a pairwise distance matrix of inter-point Euclidean distances in long format.
}
\description{
This function calculates the straight-line distance ("as the crow flies) between user-specified points.
Because these points are invariant across space and time and independent of sea level change, this calculation
is only performed once instead of repeatedly across different sea level or time intervals.
}
\examples{
#create temp directory
path <- file.path(tempdir())
#create points shapefile
points <- sf::st_multipoint(rbind(c(179.41256,-17.79426), c(179.27600,-17.97850)))
#convert points to feature geometry
points <- sf::st_sfc(points)
points <- sf::st_cast(points, "POINT")
#set default projection (WGS84)
sf::st_crs(points) <- 4326
#save shapefile
sf::write_sf(points,paste0(path,"/points.shp"))
#Project input points using EPSG:3141 and calculate Euclidean distances
pleistodist_euclidean(points=paste0(path,"/points.shp"),epsg=3141,outdir=path)
}
